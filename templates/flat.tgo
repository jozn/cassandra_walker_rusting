package x

import "ms/sun/helper"

{{range .Messages}}
type {{.Name}}_Flat struct {
{{- range .Fields}}
    {{- if .Repeated}}
    {{.FieldName}} []{{.GoFlatType}}
    {{- else }}
    {{.FieldName}} {{.GoFlatType}}
    {{- end}}
{{- end}}
}
//ToPB
func(m *{{.Name}})ToFlat() *{{.Name}}_Flat {
r := &{{.Name}}_Flat{
{{- range.Fields}}
    {{if tIsPBPrimateTypes  .TypeName}}
        {{- .FieldName}}:  {{tPBTypeToGoFlatType . "m"}} ,
    {{- end -}}
{{- end}}
}
return r
}
//ToPB
func(m *{{.Name}}_Flat)ToPB() *{{.Name}} {
r := &{{.Name}}{
{{- range.Fields}}
    {{if tIsPBPrimateTypes  .TypeName}}
        {{- .FieldName}}:  {{tFlatTypeToGoPBType2 . "m"}} ,
    {{- end -}}
{{- end}}
}
return r
}
//folding
var {{.Name}}__FOlD = &{{.Name}}{
{{- range.Fields}}
    {{if tIsPBPrimateTypes  .TypeName}}
        {{- if .Repeated -}}
        {{- else }}
            {{- .FieldName}}:  {{tDefaultGoStructValue . }} ,
        {{- end}}
    {{- end -}}
{{- end}}
}

{{end}}

/*
///// to_flat ///
{{range .Messages}}
func(m *{{.Name}})ToFlat() *{{.Name}}_Flat {
r := &{{.Name}}_Flat{
{{- range.Fields}}
    {{if tIsPBPrimateTypes  .TypeName}}
        {{- .FieldName}}:  {{tPBTypeToGoFlatType . "m"}} ,
    {{- end -}}
{{- end}}
}
return r
}
{{end}}


///// from_flat ///
{{range .Messages}}
func(m *{{.Name}}_Flat)ToPB() *{{.Name}} {
r := &{{.Name}}{
{{- range.Fields}}
    {{if tIsPBPrimateTypes  .TypeName}}
        {{- .FieldName}}:  {{tFlatTypeToGoPBType2 . "m"}} ,
    {{- end -}}
{{- end}}
}
return r
}
{{end}}


///// folding ///
{{range .Messages}}
var {{.Name}}__FOlD = &{{.Name}}{
    {{- range.Fields}}
        {{if tIsPBPrimateTypes  .TypeName}}
            {{- .FieldName}}:  {{tDefaultGoStructValue . }} ,
        {{- end -}}
    {{- end}}
}

{{end}}

*/